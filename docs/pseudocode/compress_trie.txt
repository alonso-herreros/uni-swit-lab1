/** Given a trie, return a compressed version
 *
 *  Compresses the plain binary trie returned by `create_trie`
 *
 *  @param root the root to a plain binary trie to compress
 *  @param branching_factor the branching factor to apply. Must be a real number
 *      between 0 and 1
 *  @param root_branching_factor the branching factor to apply to the root.
 *      Defaults to `branching_factor`
 *
 *  @see https://dl.acm.org/doi/10.1109/49.772439 for details
 */
Trie compress_trie(trie, branching_factor, root_branching_factor) {
    // 1. Build and sort the **base vector**. We might want to use quick sort.
    //    Check https://www.geeksforgeeks.org/quick-sort-in-c/.
    // 2. Iterate for each group. First group is **all nodes**.
    //     1. Determine the length of the shared prefix. This can be done by
    //        comparing the first and last nodes of the group, since the base
    //        vector is sorted. This length is the **skip value**.
}
